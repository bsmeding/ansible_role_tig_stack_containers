
#install
- name: Check if telegraf group exist
  group:
    name: telegraf
    gid: 993
    system: true
  become: true

- name: Check if telegraf user exist
  user:
    name: telegraf
    uid: 993
    shell: /sbin/nologin
    groups: telegraf
    system: true
    append: yes
  become: true

- name: Check telegraf config directory
  file:
    path: /etc/telegraf/telegraf.d/
    state: directory
    mode: '0744'
    owner: telegraf
    group: telegraf
  become: true

- name: Check telegraf to influx output config
  template:
    src: telegraf/telegraf_output_influxdb.j2
    dest: /etc/telegraf/telegraf.d/output_influxdb.conf
    mode: 'u=rwX,g=rX,o=rX'
    owner: telegraf
    group: telegraf

- name: Check telegraf snmp_trap inputs config
  template:
    src: telegraf/telegraf_input_snmp_trap.j2
    dest: /etc/telegraf/telegraf.d/input_snmp_trap.conf
    mode: 'u=rwX,g=rX,o=rX'
    owner: telegraf
    group: telegraf


- name: Check telegraf MIBs directory
  file:
    path: /etc/telegraf/mibs/
    state: directory
    mode: '0744'
    owner: telegraf
    group: telegraf
  become: true

- name: Check if config file exist
  stat:
    path: /etc/telegraf/telegraf.conf
  register: telegraf_config_file

- name: Create config file
  shell: 'docker run --rm telegraf telegraf config | tee /etc/telegraf/telegraf.conf &lt; /dev/null'
  when: not telegraf_config_file.stat.exists
  become: true

## TODO: Uncomment [[output.influxdb]] as this output will have ouwn config 
- name: Check telegraf config directory
  file:
    path: /etc/telegraf/telegraf.conf
    mode: '0744'
    owner: telegraf
    group: telegraf
  become: true

- name: Run Telegraf container
  docker_container:
    name: telegraf
    image: "{{ docker_containers.telegraf.image }}"
    user: 993:993
    state: started
    restart: yes
    restart_policy: "{{ docker_restart_policy }}"
    links:
      - influxdb:influxdb
    privileged: false
    purge_networks: no
    published_ports:
      - '{{ telegraf_snmp_trap_port }}:1062/udp'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/host/proc:ro
      - /etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /etc/telegraf/telegraf.d:/etc/telegraf/telegraf.d
      - /etc/telegraf/mibs:/usr/share/mibs/netsnmp
    env:
      HOST_PROC=/host/proc
    command:
      - --config /etc/telegraf/telegraf.conf
      - --config-directory /etc/telegraf/telegraf.d
  #become: true


  # search paths for SNMP MIBS (/usr/share/mibs and /iana / ietf already in use):  //.snmp/mibs:/usr/share/snmp/mibs:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/ietf:/usr/share/mibs/site:/usr/share/snmp/mibs:/usr/share/mibs/iana:/usr/share/mibs/ietf:/usr/share/mibs/netsnmp
